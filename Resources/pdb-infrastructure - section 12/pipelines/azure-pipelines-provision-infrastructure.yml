trigger: none

pool: default

parameters:
  - name: variableGroup
    type: string
    default: vg-pdb-infrastructure
  - name: serviceConnection
    type: string
    default: serviceConnectionProjectDayBreak
  - name: environment
    type: string
    values:
      - dev
      - test
      - prod

variables:
  - group: ${{ parameters.variableGroup }}
  - name: version
    value: 001
  - name: resourceGroupName
    value: "rg-$(companyShort)-$(domainShort)-$(appShort)-$(locationAbbr)-${{ parameters.environment }}-$(version)"

stages:
  - template: "./templates/stages/stage-deploy-infra.yml@self"
    parameters:
      stage: StageProvisionInfrastructureLogAnalytics
      resource: "Log Analytics"
      serviceConnection: "${{ parameters.serviceConnection }}"
      resourceGroupName: "$(resourceGroupName)"
      infraPath: "infra/logAnalytics"
      location: "$(location)"
      owner: "$(owner)"
      costCenter: "$(costCenter)"
      application: "$(application)"
      description: "$(description)"
      repository: "$(repository)"
      appShort: "$(appShort)"
      domainShort: "$(domainShort)"
      version: "$(version)"
      environment: "${{ parameters.environment }}"

  - template: "./templates/stages/stage-deploy-infra.yml@self"
    parameters:
      stage: StageProvisionInfrastructureDataFactory
      dependsOn:
        - StageProvisionInfrastructureLogAnalytics
      condition: succeeded()
      resource: "Data Factory"
      serviceConnection: "${{ parameters.serviceConnection }}"
      resourceGroupName: "$(resourceGroupName)"
      infraPath: "infra/dataFactory"
      location: "$(location)"
      owner: "$(owner)"
      costCenter: "$(costCenter)"
      application: "$(application)"
      description: "$(description)"
      repository: "$(repository)"
      appShort: "$(appShort)"
      domainShort: "$(domainShort)"
      version: "$(version)"
      environment: "${{ parameters.environment }}"
